@namespace StackNServe.Layout
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Stack-N-Serve</a>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3" >
            <NavLink class="nav-link"  @onclick="LoadPlayerGuide">
                <span class="bi bi-book-fill-nav-menu" aria-hidden="true"></span> Player Guide
            </NavLink>
        </div>
        <div class="nav-item px-3" @onclick="NewGame">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> New Game
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" @onclick="LoadLeaderboard">
                <span class="bi bi-bar-chart-fill-nav-menu" aria-hidden="true"></span> Leaderboard
            </NavLink>
        </div>
    </nav>
</div>

@code 
{
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private async void NewGame()
    {
        NavigationManager.NavigateTo("New_Game");
        await JSRuntime.InvokeVoidAsync("location.reload");
    } 
    private void LoadPlayerGuide()
    {
        NavigationManager.NavigateTo("");
    }

    private async void LoadLeaderboard()
    {
        NavigationManager.NavigateTo("Leaderboard");
        await JSRuntime.InvokeVoidAsync("location.reload");
    }
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}

